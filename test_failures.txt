.FF..................F..............F...........................................................FF..................F...........................................................s...FF......FF
======================================================================
FAIL: test_initial_too_early (tests.qt.test_qt_calendar.TestQtCalendar)
Check that an invalid date is corrected (value below the minimum).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\calendar.py", line 100, in test_initial_too_early
    self.assertEqual(component.date, component.minimum_date)
AssertionError: datetime.date(1980, 1, 1) != datetime.date(1990, 1, 1)

======================================================================
FAIL: test_initial_too_late (tests.qt.test_qt_calendar.TestQtCalendar)
Check that an invalid date is corrected (value above the maximum).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\calendar.py", line 118, in test_initial_too_late
    self.assertEqual(component.date, component.maximum_date)
AssertionError: datetime.date(2010, 1, 1) != datetime.date(2000, 1, 1)

======================================================================
FAIL: test_change_text (tests.qt.test_qt_field.TestQtField)
Change text programmatically, as opposed to editing it.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\field.py", line 163, in test_change_text
    self.assertEqual(self.events, ['text_changed'])
AssertionError: Lists differ: ['text_edited', 'text_changed'... != ['text_changed']

First differing element 0:
text_edited
text_changed

First list contains 1 additional elements.
First extra element 1:
text_changed

- ['text_edited', 'text_changed']
+ ['text_changed']

======================================================================
FAIL: test_max_length (tests.qt.test_qt_field.TestQtField)
Check that the field enforces its maximum length.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\field.py", line 101, in test_max_length
    self.assertIn('max_length_reached', self.events)
AssertionError: 'max_length_reached' not found in ['text_edited', 'text_changed']

======================================================================
FAIL: test_initial_too_early (tests.wx.test_wx_calendar.TestWxCalendar)
Check that an invalid date is corrected (value below the minimum).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\calendar.py", line 100, in test_initial_too_early
    self.assertEqual(component.date, component.minimum_date)
AssertionError: datetime.date(1980, 1, 1) != datetime.date(1990, 1, 1)

======================================================================
FAIL: test_initial_too_late (tests.wx.test_wx_calendar.TestWxCalendar)
Check that an invalid date is corrected (value above the maximum).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\calendar.py", line 118, in test_initial_too_late
    self.assertEqual(component.date, component.maximum_date)
AssertionError: datetime.date(2010, 1, 1) != datetime.date(2000, 1, 1)

======================================================================
FAIL: test_change_text (tests.wx.test_wx_field.TestWxField)
Change text programmatically, as opposed to editing it.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\field.py", line 163, in test_change_text
    self.assertEqual(self.events, ['text_changed'])
AssertionError: Lists differ: ['text_edited', 'text_changed'... != ['text_changed']

First differing element 0:
text_edited
text_changed

First list contains 1 additional elements.
First extra element 1:
text_changed

- ['text_edited', 'text_changed']
+ ['text_changed']

======================================================================
FAIL: test_maximum_value (tests.wx.test_wx_spin_box.TestWxSpinBox)
Check that the spin box enforces its upper bound.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\spin_box.py", line 125, in test_maximum_value
    self.assertTrue(component.value <= high)
AssertionError: False is not true

======================================================================
FAIL: test_minimum_value (tests.wx.test_wx_spin_box.TestWxSpinBox)
Check that the spin box enforces its lower bound.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\spin_box.py", line 115, in test_minimum_value
    self.assertTrue(component.value >= low)
AssertionError: False is not true

======================================================================
FAIL: test_wrap_bottom (tests.wx.test_wx_spin_box.TestWxSpinBox)
Check that a spin box wraps appropriately, from bottom to top.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\spin_box.py", line 202, in test_wrap_bottom
    self.assertEqual(component.value, component.high)
AssertionError: 20 != 21

======================================================================
FAIL: test_wrap_top (tests.wx.test_wx_spin_box.TestWxSpinBox)
Check that a spin box wraps appropriately, from top to bottom.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ionnis\Projects\enaml\tests\common\spin_box.py", line 191, in test_wrap_top
    self.assertEqual(component.value, component.low)
AssertionError: -9 != -10

----------------------------------------------------------------------
Ran 190 tests in 8.541s

FAILED (failures=11, skipped=1)

