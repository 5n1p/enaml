#------------------------------------------------------------------------------
#  Copyright (c) 2011, Enthought, Inc.
#  All rights reserved.
#------------------------------------------------------------------------------

#from phone_validator import PhoneNumberValidator

from enaml.widgets import Window, Label, Field, Form, DateEdit, \
                            CheckBox, GroupBox, Container, PushButton
from enaml.layout import vertical, horizontal, align, spacer

enamldef EmployeeForm(Form):
    attr employee
    attr show_employer: bool = False
    Label:
        text = "First name:"
    Field:
        text := employee.first_name
    Label:
        text = "Last name:"
    Field:
        text := employee.last_name
    Label:
        text = "Home phone:"
    Field:
        #text := employee.phone
        text << str(employee.phone)
        #validator = PhoneNumberValidator()
        #bgcolor << 'unacceptable' if not acceptable else 'none'
    Label:
        text = 'Date of Birth:'
    DateEdit:
        date := employee.dob
    Label:
        text = 'Age:'
    Label:
        text << str(employee.age)
    Label:
        text = 'Password'
    Field:
        #password_mode << 'password' if not pw_cb.checked else 'normal'
        text :: print 'Password:', text
    Label:
        text = 'Show Password:'
    CheckBox:
        id: pw_cb
        checked = False
    PushButton:
        checked := show_employer
        checkable = True
        text << ('Hide' if show_employer else 'Show') + ' Employer Details'


enamldef EmployerForm(Form):
    attr employer
    Label:
        text = "Company:"
    Field:
        text << employer.company_name
        enabled << en_cb.checked
    Label:
        text = "Reporting Manager:"
    Field:
        text << "%s %s" % (employer.first_name, employer.last_name)
        enabled << en_cb.checked
    Label:
        text = "Allow Editing:"
    CheckBox:
        id: en_cb
        checked = True


enamldef EmployeeView(Window):
    id: main
    attr employee

    title << "Employee Record for: %s, %s" % (employee.last_name, 
                                              employee.first_name)
    Container:
        constraints << [
            vertical(top, top_box, bottom_box.when(bottom_box.visible), bottom),
            horizontal(left, spacer.flex(), top_box, spacer.flex(), right),
            horizontal(left, spacer.flex(), bottom_box, spacer.flex(), right),
            align('midline', top_form, bottom_form, clear_invisible=False)
        ]
        GroupBox:
            id: top_box
            title = "Personal Details"
            EmployeeForm:
                id: top_form
                # We access the employee object through the identifier
                # 'main' here, because the EmployeeForm also has an 
                # 'employee' attribute declared, and that would be 
                # found first.
                employee = main.employee
        GroupBox:
            id: bottom_box
            title = "Employer Details"
            visible << top_form.show_employer
            EmployerForm:
                id: bottom_form
                employer << employee.boss

