

def printer(val):
    print 'printing from python', val
    

def create_another():
    view = MainWindow()
    view.show()


defn MainWindow:
    Window:
        constraints = [
            frame.top == top + 10,
            frame.left == left + 10,
            frame.right == right - 10,
            frame.bottom + 10 == add_button.top,
            frame.height >= 150,

            add_button.left == frame.left,
            add_button.bottom + 10 == bottom,

            remove_button.top == add_button.top,
            remove_button.bottom == add_button.bottom,
            remove_button.left == add_button.right + 10,

            (change_mode_button.h_center == frame.h_center) | 'weak',
            change_mode_button.left >= remove_button.right + 10,
            change_mode_button.top == add_button.top,
            change_mode_button.bottom == add_button.bottom,

            share_button.top == add_button.top,
            share_button.bottom == add_button.bottom,
            share_button.right == frame.right,
            share_button.left >= change_mode_button.right + 10,

        ]
        PushButton -> frame:
            text = 'Frame'
            # Tell the layout manager to ignore hugging constraints
            # for this button so that it expands in both directions.
            # (Setting to 'weak' would also work, but requires more 
            # computation by the solver).
            hug = ('ignore', 'ignore')
            clicked >> printer(self)
        PushButton -> add_button:
            text = 'Add'
            # Uncomment the next two lines to see how to play around with 
            # the hugging and compression properties
            #hug = ('weak', 'strong')
            #compress = ('weak', 'strong')
            clicked >> create_another()
        PushButton -> remove_button:
            text = 'Remove'
        PushButton -> change_mode_button:
            text = 'Change Mode'
            # Click this button to update the button text and have
            # it expand to fit its contents
            clicked >> setattr(self, 'text', text * 2)
        PushButton -> share_button:
            text = 'Share...'
            # Click this button to force it to have a width of 200
            clicked >> parent.constraints.append(width == 200)


